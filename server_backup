#include "tema1.h"
#include <stdio.h> 
#include <time.h> 
#include <rpc/rpc.h>
#include "token.h"

req_authorization_return *
req_auth_1_svc(char **argp, struct svc_req *rqstp)
{
	static req_authorization_return  result;

	/*
	 * insert server code here
	 */
	printf("Request authorization for client with id: %s\n", *argp);
	result.id.id_val = *argp;
	result.id.id_len = strlen(result.id.id_val);
	result.auth_token.auth_token_val = generate_access_token(*argp);
	result.auth_token.auth_token_len = strlen(result.auth_token.auth_token_val);
	
	return &result;
}

req_access_return *
req_access_1_svc(req_access_param *argp, struct svc_req *rqstp)
{
	static req_access_return  result;

	/*
	 * insert server code here
	 */
	printf("Request access for client with id:\n");
	result.id.id_val = argp->id.id_val;
	result.id.id_len = argp->id.id_len;
	result.auth_token.auth_token_val = argp->auth_token.auth_token_val;
	result.auth_token.auth_token_len = argp->auth_token.auth_token_len;
	result.access_token.access_token_val = "access_token";
	result.access_token.access_token_len = 15;

	return &result;
}

char **
validate_action_1_svc(action_param *argp, struct svc_req *rqstp)
{
	static char * result;

	/*
	 * insert server code here
	 */



	return &result;
}

approve_req_token_return *
approve_token_1_svc(char **argp, struct svc_req *rqstp)
{
	static approve_req_token_return  result;
	printf("Approve token for client with");
	result.approved = 1;
	
	/*
	 * insert server code here
	 */

	return &result;
}
